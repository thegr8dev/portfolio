name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    name: 1. Installation Check
    if: "!contains(github.event.head_commit.message, 'ðŸŽ¨ Auto-format code with Laravel Pint')"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Verify installation
      run: |
        echo "âœ… Composer dependencies installed successfully"
        echo "âœ… NPM dependencies installed successfully"
        echo "âœ… Assets built successfully"

  migrations:
    runs-on: ubuntu-latest
    name: 2. Migration Check
    needs: install
    if: "!contains(github.event.head_commit.message, 'ðŸŽ¨ Auto-format code with Laravel Pint')"

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: boost_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Create Environment file
      run: |
        cp .env.example .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=boost_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "CACHE_DRIVER=array" >> .env
        echo "SESSION_DRIVER=array" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env

    - name: Generate Application key
      run: php artisan key:generate

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Verify migrations
      run: |
        echo "âœ… Migrations ran successfully"
        php artisan migrate:status

  tests:
    runs-on: ubuntu-latest
    name: 3. Test Suite
    needs: migrations
    if: "!contains(github.event.head_commit.message, 'ðŸŽ¨ Auto-format code with Laravel Pint')"

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: boost_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Create Environment file
      run: |
        cp .env.example .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=boost_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "CACHE_DRIVER=array" >> .env
        echo "SESSION_DRIVER=array" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env

    - name: Generate Application key
      run: php artisan key:generate

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Run Tests
      run: composer test

  format:
    runs-on: ubuntu-latest
    name: 4. Code Formatting (Pint)
    needs: tests
    if: github.event_name == 'pull_request' && !contains(github.event.head_commit.message, 'ðŸŽ¨ Auto-format code with Laravel Pint')
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

    - name: Run Pint (Format Code)
      run: composer pint

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "No changes found"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes found"
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push formatted code
      if: steps.changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "ðŸŽ¨ Auto-format code with Laravel Pint

        Co-authored-by: Laravel Pint <pint@laravel.com>"
        git push

  quality:
    runs-on: ubuntu-latest
    name: 5. Code Quality (PHPStan)
    if: always() && (github.event_name == 'pull_request' || contains(github.event.head_commit.message, 'ðŸŽ¨ Auto-format code with Laravel Pint'))

    steps:
    - name: Checkout code (fresh)
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref || github.ref }}
        fetch-depth: 0

    - name: Fetch and reset to latest head
      if: github.event_name == 'pull_request'
      run: |
        git fetch origin ${{ github.head_ref }}
        git reset --hard origin/${{ github.head_ref }}

    - name: Setup PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

    - name: Run Type Coverage (Check Code Type Coverage)
      run: composer type-coverage

    - name: Run Pint (Check Code Style)
      run: composer pint:test

    - name: Run PHPStan (Static Analysis)
      run: composer lint