name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php: [8.3, 8.4]
        dependency-version: [prefer-stable]
        
    name: Tests (PHP ${{ matrix.php }})

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: boost_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.composer/cache/files
        key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.lock') }}
        restore-keys: |
          dependencies-php-${{ matrix.php }}-composer-

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pdo_mysql, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Composer dependencies
      run: composer install --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-progress

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Create Environment file
      run: |
        cp .env.example .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=boost_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "APP_KEY=" >> .env
        echo "CACHE_DRIVER=array" >> .env
        echo "SESSION_DRIVER=array" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env

    - name: Generate Application key
      run: php artisan key:generate

    - name: Clear Config cache
      run: php artisan config:clear

    - name: Run Migrations
      run: php artisan migrate --force -v

    - name: Generate IDE Helper
      run: composer ide-helper

    - name: Run Pint (Code Style)
      run: composer lint:test

    - name: Run PHPStan (Static Analysis)
      run: composer phpstan

    - name: Run Pest Tests
      run: composer test

    - name: Upload test coverage
      if: matrix.php == '8.3' && matrix.dependency-version == 'prefer-stable'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/

  security:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: none

    - name: Install Composer dependencies
      run: composer install --prefer-stable --prefer-dist --no-interaction --no-progress

    - name: Run Composer Audit
      run: composer audit

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install NPM dependencies
      run: npm ci

    - name: Run NPM Audit
      run: npm audit --audit-level=moderate